---
layout: base.njk
title: bridge - creative mentorship
---

<div class="admin-link">
  <a href="/admin/">admin</a>
</div>

<h1>bridge</h1>
<p>get help from experienced creatives. give help when you can. anyone can become a mentor - just add yourself.</p>
<p><a href="/admin/">+ post request / add mentor</a></p>

<div class="metrics">
  {% for metric in collections.liveMetrics %}{{ metric.mentorCount }} mentors available - {{ metric.bridgeCount }} bridges crossed{% endfor %}
</div>

<h2>open requests</h2>

{% for request in collections.openRequests %}
<div class="request">
  <div class="row">
    <span class="tag">please:</span> {{ request.data.need }}
  </div>
  
  <div class="row">
    <span class="tag">role:</span> {{ request.data.role }}
  </div>
  
  <div class="row">
    <span class="tag">who:</span> {{ request.data.name | maskName }} [name revealed after connection]
  </div>
  
  <div class="row">
    <span class="tag">location:</span> {{ request.data.location }}
  </div>
  
  {% if request.data.looking_for %}
  <div class="row">
    <span class="tag">looking for:</span> {{ request.data.looking_for }}
  </div>
  {% endif %}
  
  <div class="row">
    <span class="tag">expires:</span> {{ request.data.expires | timeLeft }}
  </div>
  
  {% if request.templateContent %}
  <div class="row">
    {{ request.templateContent | safe }}
  </div>
  {% endif %}
  
  <button class="volunteer-btn" onclick="openVolunteerForm(this, '{{ request.data.slug }}', '{{ request.data.email }}')">
    volunteer to help
  </button>
</div>
{% endfor %}

{% if collections.openRequests.length === 0 %}
<div class="request">
  no open requests right now. post the first one!
</div>
{% endif %}

<!-- Simple volunteer popup -->
<div id="volunteerPopup" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.7); z-index:1000;">
  <div style="position:absolute; top:50%; left:50%; transform:translate(-50%,-50%); background:white; padding:30px; border-radius:8px; max-width:400px; width:90%;">
    <h3>Volunteer to Help</h3>
    <form id="volunteerForm">
      <div style="margin-bottom:15px;">
        <label>Your name:</label><br>
        <input type="text" name="volunteer_name" required style="width:100%; padding:8px; margin-top:5px;">
      </div>
      <div style="margin-bottom:15px;">
        <label>Your email:</label><br>
        <input type="email" name="volunteer_email" required style="width:100%; padding:8px; margin-top:5px;">
      </div>
      <div style="margin-bottom:15px;">
        <label>Quick note (optional):</label><br>
        <textarea name="volunteer_note" style="width:100%; padding:8px; margin-top:5px; height:60px;" placeholder="Brief intro or how you can help..."></textarea>
      </div>
      <button type="submit" style="background:#333; color:white; padding:10px 20px; border:none; border-radius:4px; margin-right:10px;">Send Connection</button>
      <button type="button" onclick="closeVolunteerForm()" style="background:#ccc; color:#333; padding:10px 20px; border:none; border-radius:4px;">Cancel</button>
    </form>
    
    <div class="privacy-notice" style="margin-top:20px; font-size:12px; color:#666;">
      private temporary emails created for 7 days. your real email stays hidden. after 7 days, connection expires automatically. this is just to connect and ensure 100% privacy of personal email. for files, use external sharing services [eg.: google drive, dropbox, we transfer].
    </div>
  </div>
</div>

<!-- Hidden form for Netlify Forms processing -->
<form name="volunteer-connection" netlify netlify-honeypot="bot-field" hidden>
  <input type="text" name="volunteer_name" />
  <input type="email" name="volunteer_email" />
  <input type="text" name="volunteer_note" />
  <input type="text" name="request_slug" />
  <input type="text" name="request_need" />
  <input type="text" name="request_role" />
  <input type="text" name="request_location" />
  <input type="text" name="mentee_email" />
</form>

<footer>
  creatives helping creatives. post requests for help. volunteer when you can. private 7-day email bridges for focused help.<br>
  built on netlify + eleventy
</footer>

<script>
let currentRequestData = {};

function openVolunteerForm(buttonElement, requestSlug, menteeEmail) {
  // Store current request data
  const requestDiv = buttonElement.closest('.request');
  currentRequestData = {
    slug: requestSlug,
    menteeEmail: menteeEmail,
    need: requestDiv.querySelector('.row:nth-child(1)').textContent.replace('please:', '').trim(),
    role: requestDiv.querySelector('.row:nth-child(2)').textContent.replace('role:', '').trim(),
    location: requestDiv.querySelector('.row:nth-child(4)').textContent.replace('location:', '').trim()
  };
  
  // Show the popup
  document.getElementById('volunteerPopup').style.display = 'block';
}

function closeVolunteerForm() {
  document.getElementById('volunteerPopup').style.display = 'none';
  currentRequestData = {};
}

// Handle form submission
document.getElementById('volunteerForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  const submitBtn = this.querySelector('button[type="submit"]');
  const originalText = submitBtn.textContent;
  
  submitBtn.textContent = 'Connecting...';
  submitBtn.disabled = true;
  
  // Prepare data for Netlify Forms
  const data = new FormData();
  data.append('form-name', 'volunteer-connection');
  data.append('volunteer_name', formData.get('volunteer_name'));
  data.append('volunteer_email', formData.get('volunteer_email'));
  data.append('volunteer_note', formData.get('volunteer_note') || '');
  data.append('request_slug', currentRequestData.slug);
  data.append('request_need', currentRequestData.need);
  data.append('request_role', currentRequestData.role);
  data.append('request_location', currentRequestData.location);
  data.append('mentee_email', currentRequestData.menteeEmail);
  
  try {
    const response = await fetch('/', {
      method: 'POST',
      body: data
    });
    
    if (response.ok) {
      alert('Connection sent! You should both receive emails with temporary addresses to connect privately.');
      closeVolunteerForm();
      this.reset();
    } else {
      alert('Error sending connection. Please try again.');
    }
  } catch (error) {
    alert('Network error. Please try again.');
  }
  
  submitBtn.textContent = originalText;
  submitBtn.disabled = false;
});

// Close popup when clicking outside
document.getElementById('volunteerPopup').addEventListener('click', function(e) {
  if (e.target === this) {
    closeVolunteerForm();
  }
});
</script>
